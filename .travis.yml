# Copyright Roger Meier <r.meier@siemens.com>
# SPDX-License-Identifier:	GPL-2.0+

# build U-Boot on Travis CI - https://travis-ci.org/

sudo: true

language: c

addons:
  apt:
    packages:
      - cppcheck
      - sloccount
      - sparse
      - bc
      - build-essential
      - libsdl1.2-dev
      - python
      - python-virtualenv

cache:
  - apt

install:
  # patch to include verified-boot testing harness
  # see the branch: v2016.07-rc3-vboot-test, this is a squash of sjg's testing
  - git remote set-branches origin 'v2016.07-rc3-vboot-testing'
  - git fetch --depth 2 origin v2016.07-rc3-vboot-testing
  - git config --global user.email "travis@travis-ci.org"
  - git config --global user.name "Travis CI"
  # - git cherry-pick 4dad8343b4014c265bc2bf4f463a4005926a516a
  - git pull --rebase origin v2016.07-rc3-vboot-testing
  # install latest device tree compiler
  - git clone --depth=1 https://git.kernel.org/pub/scm/utils/dtc/dtc.git /tmp/dtc
  - make -j4 -C /tmp/dtc
  # prepare buildman environment
  - export BUILDMAN_ROOT="root:"
  - export BUILDMAN_ARM="arm:"
  - export BUILDMAN_SANDBOX="sandbox:"
  - echo -e "[toolchain]\n${BUILDMAN_ROOT} /\n" > ~/.buildman
  - echo -e "${BUILDMAN_ARM} /opt/eldk-5.4/armv5te/sysroots/i686-eldk-linux/usr/bin/armv5te-linux-gnueabi/\n" >> ~/.buildman
  - echo -e "${BUILDMAN_SANDBOX} /usr/bin/gcc\n" >> ~/.buildman
  - export BUILDMAN_ALIAS_ARM="arm:"
  - echo -e "${BUILDMAN_ALIAS_ARM} armv5te\n" >> ~/.buildman
  - cat ~/.buildman
  - virtualenv /tmp/venv
  - . /tmp/venv/bin/activate
  - pip install pytest

env:
  global:
    - PATH=/tmp/dtc:$PATH
    - BUILD_DIR=build
    - HOSTCC="cc"
    - HOSTCXX="c++"

before_script:
  # install toolchains based on TOOLCHAIN} variable
  - if [[ "${TOOLCHAIN}" == *arm* ]]; then wget ftp://ftp.denx.de/pub/eldk/5.4/targets/armv5te/eldk-eglibc-i686-arm-toolchain-gmae-5.4.sh ; fi
  - if [[ "${TOOLCHAIN}" == *arm* ]]; then sh eldk-eglibc-i686-arm-toolchain-gmae-5.4.sh -y ; fi
  - if [[ "${TOOLCHAIN}" == *i386* ]]; then ./tools/buildman/buildman sandbox --fetch-arch i386 ; fi

script:
  # the execution sequence for each test
  - if [[ "${TEST_CMD}" != "" ]]; then
      ${TEST_CMD};
    fi
  - if [[ "${BUILDMAN}" != "" ]]; then
      tools/buildman/buildman ${BUILDMAN};
    fi

matrix:
  include:
    # we need to build by vendor due to 50min time limit for builds
    # each env setting here is a dedicated build
    # - env:
    #   - BUILDMAN="sandbox x86"
    #     TOOLCHAIN="i386"
    # - env:
    #   - BUILDMAN="ti"
    #     TOOLCHAIN="arm"
    # test/py
    - env:
      - TEST_CMD="./test/py/test.py --bd sandbox --build -k vboot"
